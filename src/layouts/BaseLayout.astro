---
export interface Props {
  title: string;
  description?: string;
}

const { title, description = "Passionate developer and student" } = Astro.props;
---

<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>{title}</title>
    <meta name="description" content={description} />
    <link rel="stylesheet" href="/src/styles/main.css" />
  </head>
  <body>
    <div class="container">
      <nav>
        <a href="/">~/home</a>
        <div class="nav-links">
          <a href="/blog">blog</a>
          <a href="https://github.com/your-username" target="_blank">github</a>
          <a href="https://twitter.com/your-username" target="_blank">twitter</a>
          <button class="theme-toggle" id="theme-toggle" aria-label="Toggle theme">
            <span id="theme-icon">â˜€</span>
          </button>
        </div>
      </nav>

      <main>
        <slot />
      </main>

      <footer>
        <p>Â© 2024 Your Name. Aspiring developer.</p>
      </footer>
    </div>

    <script>
      // DÃ©tection du thÃ¨me
      function getTheme() {
        if (typeof localStorage !== 'undefined' && localStorage.getItem('theme')) {
          return localStorage.getItem('theme');
        }
        if (window.matchMedia('(prefers-color-scheme: light)').matches) {
          return 'light';
        }
        return 'dark';
      }

      // Application du thÃ¨me
      function setTheme(theme) {
        document.documentElement.setAttribute('data-theme', theme);
        localStorage.setItem('theme', theme);
        
        const icon = document.getElementById('theme-icon');
        if (icon) {
          icon.textContent = theme === 'light' ? 'ðŸŒ™' : 'â˜€';
        }
      }

      // Initialisation
      const currentTheme = getTheme();
      setTheme(currentTheme);

      // Toggle
      document.getElementById('theme-toggle')?.addEventListener('click', () => {
        const currentTheme = document.documentElement.getAttribute('data-theme');
        const newTheme = currentTheme === 'light' ? 'dark' : 'light';
        setTheme(newTheme);
      });

      // Ã‰coute des changements de prÃ©fÃ©rence systÃ¨me
      window.matchMedia('(prefers-color-scheme: light)').addEventListener('change', (e) => {
        if (!localStorage.getItem('theme')) {
          setTheme(e.matches ? 'light' : 'dark');
        }
      });
    </script>
  </body>
</html>